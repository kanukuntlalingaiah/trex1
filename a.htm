<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <script src="a_data/p5.js" crossorigin=""></script>
    <script src="a_data/p5_003.js" crossorigin=""></script>
    <script src="a_data/p5_002.js" crossorigin=""></script>
<script src="a_data/8396f438-322e-4ef4-b87c-1777e64d6527.js" crossorigin=""></script>
    
    <meta charset="utf-8">

  <!-- base href="https://editor.p5js.org/rasagna/sketches/wH0Gge7Ws/" --><style>
html, body {
  margin: 0;
  padding: 0;
}
canvas {
  display: block;
}
</style><script src="a_data/previewScripts.js"></script><style data-emotion=""></style><script>
    function getScriptOff(line) {
      var offs = [[72,"sketch"]];
      var l = 0;
      var file = '';
      for (var i=0; i<offs.length; i++) {
        var n = offs[i][0];
        if (n < line && n > l) {
          l = n;
          file = offs[i][1];
        }
      }
      return [line - l, file];
    }
    // catch reference errors, via http://stackoverflow.com/a/12747364/2994108
    window.onerror = function (msg, url, lineNumber, columnNo, error) {
        var string = msg.toLowerCase();
        var substring = "script error";
        var data = {};
        if (url.match(/^(http:\/\/|https:\/\/)/) !== null && error.stack){
          var errorNum = error.stack.split('about:srcdoc:')[1].split(':')[0];
          var fileInfo = getScriptOff(errorNum);
          data = msg + ' (' + fileInfo[1] + ': line ' + fileInfo[0] + ')';
        } else {
          var fileInfo = getScriptOff(lineNumber);
          data = msg + ' (' + fileInfo[1] + ': line ' + fileInfo[0] + ')';
        }
        window.parent.postMessage([{
          log: [{
            method: 'error',
            data: [data],
            id: Date.now().toString()
          }],
          source: fileInfo[1]
        }], '*');
      return false;
    };
    // catch rejected promises
    window.onunhandledrejection = function (event) {
      if (event.reason && event.reason.message && event.reason.stack){
        var errorNum = event.reason.stack.split('about:srcdoc:')[1].split(':')[0];
        var fileInfo = getScriptOff(errorNum);
        var data = event.reason.message + ' (' + fileInfo[1] + ': line ' + fileInfo[0] + ')';
        window.parent.postMessage([{
          log: [{
            method: 'error',
            data: [data],
            id: Date.now().toString()
          }],
          source: fileInfo[1]
        }], '*');
      }
    };
  </script></head>
  <body>
      <script data-tag="@fs-sketch.js">var trex, trex_running, trex_collided;
var ground, invisibleGround, groundImage;

var cloud, cloudsGroup, cloudImage;
var obs1,obs2,obs3,obs4,obs5,obs6;

var score;
var newImage;

function preload(){
  trex_running = loadAnimation("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/7f9edc81-b1a9-47d2-afbc-bf8c880b19e3.png","https://assets.editor.p5js.org/601bd6529f2afb002442dac2/1ca1b316-9b87-4771-addc-3a2498f86a22.png","https://assets.editor.p5js.org/601bd6529f2afb002442dac2/4fc74ed7-5ab2-4630-a62c-0234d373e451.png");
  trex_collided = loadAnimation("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/aff37b30-9def-4d90-a3cc-06074bcce3fa.png");
  
  groundImage = loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/beeffcba-7d17-4f82-83a4-577c02cd3e6f.png");
  
  cloudImage = loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/4fc3c1da-40f5-4929-b41c-97d1f6ecfa0e.png");
 
  obs1=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/9a9889db-2a99-4038-8c0e-fefcb391e8d8.png");
  obs2=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/e64a6b89-ffa7-4b6e-aa4d-8d2278c5e29c.png");
  obs3=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/bb312c89-c3f0-404a-b988-5c2d066cd804.png");
  obs4=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/02590414-4c28-4a51-b2f1-eb3c89f9967a.png");
  obs5=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/934cd78e-637b-485b-b5a0-242a6d158441.png");
  obs6=loadImage("https://assets.editor.p5js.org/601bd6529f2afb002442dac2/e405bfc6-c4b8-4aa6-9b35-7d056aca10a3.png");
  
}

function setup() {
  createCanvas(600, 200);

  trex = createSprite(50,160,20,50);
  trex.addAnimation("running", trex_running);
  // trex.addAnimation("collided",trex_collided)
  trex.scale = 0.5;
  
  ground = createSprite(200,180,400,20);
  ground.addImage("ground",groundImage);
  ground.x = ground.width /2;
  ground.velocityX = -4;
  
  invisibleGround = createSprite(200,190,400,10);
  invisibleGround.visible = false;
  
  console.log("Hello"+ 5)
  score=0;
  
}

function draw() {
  background(180);
 text("score"+score,300,50) 
  score=score+Math.round(frameCount/60)
  
  
  if(keyDown("space")&& trex.y >= 100) {
    trex.velocityY = -10;
  }
  
  trex.velocityY = trex.velocityY + 0.8
  
  if (ground.x < 0){
    ground.x = ground.width/2;
  }
  
  trex.collide(invisibleGround);
  
  //spawn the clouds
  spawnClouds();
  spawnobstacles();
  drawSprites();
}

function spawnClouds() {
  //write code here to spawn the clouds
  if (frameCount % 60 === 0) {
    cloud = createSprite(600,100,40,10);
    cloud.addImage(cloudImage)
    cloud.y = Math.round(random(10,60))
    cloud.scale = 0.4;
    cloud.velocityX = -3;
    
    
    //assigning lifetime to the variable
    cloud.lifetime = 134
    
    //adjust the depth
    cloud.depth = trex.depth
    trex.depth = trex.depth + 1;
    }
}
function spawnobstacles(){
  if(frameCount%60===0){
    var obstacle=createSprite(600,165,10,40);
    obstacle.velocityX=-6;
    var rand=Math.round(random(1,6))
    switch(rand){
   case 1:obstacle.addImage(obs1)
break
case 2:obstacle.addImage(obs2)
        break
  case 3:obstacle.addImage(obs3)
        break
case 4:obstacle.addImage(obs4)
        break
 case 5:obstacle.addImage(obs5)  
        break
case 6:obstacle.addImage(obs6)
        break
 default:break
 
    }
 obstacle.scale=0.5;
  obstacle.lifetime=100;
  }
}
</script>
  

<canvas id="defaultCanvas0" class="p5Canvas" style="width: 600px; height: 200px;" width="1200" height="400"></canvas></body></html>